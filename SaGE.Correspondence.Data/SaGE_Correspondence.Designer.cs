//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Account_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Account), "Account1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Account), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_StufferGroup_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Account), "StufferGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.StufferGroup), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_TemplateGroup_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Account), "TemplateGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TemplateGroup), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_TransactionDefinition_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Account), "TransactionDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TransactionDefinition), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Batch_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Job), "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Batch), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelData_Channel", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Channel), "TransactionChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TransactionChannel), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Channel), "ChannelSequence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelSequence), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel1", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Channel), "ChannelSequence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelSequence), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel2", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Channel), "ChannelSequence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelSequence), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_JobDefChannels_Channel", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SaGE.Correspondence.Data.Channel), "JobDefChannels", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.JobDefChannel), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Transaction_Channel", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Channel), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Transaction), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_PrinterDetail_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Job), "PrinterDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.PrinterDetail), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Transaction_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Job), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Transaction), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_PrinterDetail_PrintSupplier", "PrintSupplier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.PrintSupplier), "PrinterDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.PrinterDetail), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_PrinterTray_PrinterDetail", "PrinterDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.PrinterDetail), "PrinterTray", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.PrinterTray), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Stuffer_StufferGroup", "StufferGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.StufferGroup), "Stuffer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Stuffer), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Template_TemplateGroup", "TemplateGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.TemplateGroup), "Template", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Template), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelData_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Transaction), "TransactionChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TransactionChannel), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Transaction_Transaction", "TransactionDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.TransactionDefinition), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Transaction), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_TransData_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Transaction), "TransactionData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TransactionData), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_TransactionData_Transaction", "TransDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.TransDataType), "TransactionData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TransactionData), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_TransactionContactPoint_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SaGE.Correspondence.Data.Transaction), "TransactionContactPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TransactionContactPoint), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_TransactionEntity_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Transaction), "TransactionEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.TransactionEntity), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Email_Template", "Template", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Template), "Email", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Email), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Email_Template1", "Template", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Template), "Email", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Email), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Stuffer_Email", "Email", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Email), "Stuffer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Stuffer), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelBatch_Channel", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Channel), "ChannelBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelBatch), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelBatch_Job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Job), "ChannelBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelBatch), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelTransaction_ChannelBatch", "ChannelBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.ChannelBatch), "ChannelBatchTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelBatchTransaction), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelTransaction_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Transaction), "ChannelBatchTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelBatchTransaction), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_MergeBatchTransaction_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Transaction), "MergeBatchTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.MergeBatchTransaction), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_JobDefinition_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.Account), "JobDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.JobDefinition), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_JobDefinition", "JobDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.JobDefinition), "ChannelSequence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.ChannelSequence), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Email_JobDefinition", "JobDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.JobDefinition), "Email", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Email), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_JobDefChannels_JobDefinition", "JobDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SaGE.Correspondence.Data.JobDefinition), "JobDefChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.JobDefChannel), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_DocStore_JobDefinition", "JobDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.JobDefinition), "DocStore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.DocStore), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_Job_JobDefinition", "JobDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.JobDefinition), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.Job), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_MergeBatchTransaction_MergeBatch", "MergeBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SaGE.Correspondence.Data.MergeBatch), "MergeBatchTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.MergeBatchTransaction), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_MergeBatch_MergeBatchState", "MergeBatchState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SaGE.Correspondence.Data.MergeBatchState), "MergeBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SaGE.Correspondence.Data.MergeBatch), true)]
[assembly: EdmRelationshipAttribute("SaGECorrespondenceModel", "FK_MergeBatchState_MergeBatchState", "MergeBatchState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SaGE.Correspondence.Data.MergeBatchState), "MergeBatchState1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SaGE.Correspondence.Data.MergeBatchState), true)]

#endregion

namespace SaGE.Correspondence.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SaGECorrespondenceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SaGECorrespondenceEntities object using the connection string found in the 'SaGECorrespondenceEntities' section of the application configuration file.
        /// </summary>
        public SaGECorrespondenceEntities() : base("name=SaGECorrespondenceEntities", "SaGECorrespondenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SaGECorrespondenceEntities object.
        /// </summary>
        public SaGECorrespondenceEntities(string connectionString) : base(connectionString, "SaGECorrespondenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SaGECorrespondenceEntities object.
        /// </summary>
        public SaGECorrespondenceEntities(EntityConnection connection) : base(connection, "SaGECorrespondenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Batch> Batches
        {
            get
            {
                if ((_Batches == null))
                {
                    _Batches = base.CreateObjectSet<Batch>("Batches");
                }
                return _Batches;
            }
        }
        private ObjectSet<Batch> _Batches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Channel> Channels
        {
            get
            {
                if ((_Channels == null))
                {
                    _Channels = base.CreateObjectSet<Channel>("Channels");
                }
                return _Channels;
            }
        }
        private ObjectSet<Channel> _Channels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelSequence> ChannelSequences
        {
            get
            {
                if ((_ChannelSequences == null))
                {
                    _ChannelSequences = base.CreateObjectSet<ChannelSequence>("ChannelSequences");
                }
                return _ChannelSequences;
            }
        }
        private ObjectSet<ChannelSequence> _ChannelSequences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocStore> DocStores
        {
            get
            {
                if ((_DocStores == null))
                {
                    _DocStores = base.CreateObjectSet<DocStore>("DocStores");
                }
                return _DocStores;
            }
        }
        private ObjectSet<DocStore> _DocStores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Engine> Engines
        {
            get
            {
                if ((_Engines == null))
                {
                    _Engines = base.CreateObjectSet<Engine>("Engines");
                }
                return _Engines;
            }
        }
        private ObjectSet<Engine> _Engines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobDefChannel> JobDefChannels
        {
            get
            {
                if ((_JobDefChannels == null))
                {
                    _JobDefChannels = base.CreateObjectSet<JobDefChannel>("JobDefChannels");
                }
                return _JobDefChannels;
            }
        }
        private ObjectSet<JobDefChannel> _JobDefChannels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Package> Packages
        {
            get
            {
                if ((_Packages == null))
                {
                    _Packages = base.CreateObjectSet<Package>("Packages");
                }
                return _Packages;
            }
        }
        private ObjectSet<Package> _Packages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrinterDetail> PrinterDetails
        {
            get
            {
                if ((_PrinterDetails == null))
                {
                    _PrinterDetails = base.CreateObjectSet<PrinterDetail>("PrinterDetails");
                }
                return _PrinterDetails;
            }
        }
        private ObjectSet<PrinterDetail> _PrinterDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrinterTray> PrinterTrays
        {
            get
            {
                if ((_PrinterTrays == null))
                {
                    _PrinterTrays = base.CreateObjectSet<PrinterTray>("PrinterTrays");
                }
                return _PrinterTrays;
            }
        }
        private ObjectSet<PrinterTray> _PrinterTrays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrintSupplier> PrintSuppliers
        {
            get
            {
                if ((_PrintSuppliers == null))
                {
                    _PrintSuppliers = base.CreateObjectSet<PrintSupplier>("PrintSuppliers");
                }
                return _PrintSuppliers;
            }
        }
        private ObjectSet<PrintSupplier> _PrintSuppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stuffer> Stuffers
        {
            get
            {
                if ((_Stuffers == null))
                {
                    _Stuffers = base.CreateObjectSet<Stuffer>("Stuffers");
                }
                return _Stuffers;
            }
        }
        private ObjectSet<Stuffer> _Stuffers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StufferGroup> StufferGroups
        {
            get
            {
                if ((_StufferGroups == null))
                {
                    _StufferGroups = base.CreateObjectSet<StufferGroup>("StufferGroups");
                }
                return _StufferGroups;
            }
        }
        private ObjectSet<StufferGroup> _StufferGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Template> Templates
        {
            get
            {
                if ((_Templates == null))
                {
                    _Templates = base.CreateObjectSet<Template>("Templates");
                }
                return _Templates;
            }
        }
        private ObjectSet<Template> _Templates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TemplateGroup> TemplateGroups
        {
            get
            {
                if ((_TemplateGroups == null))
                {
                    _TemplateGroups = base.CreateObjectSet<TemplateGroup>("TemplateGroups");
                }
                return _TemplateGroups;
            }
        }
        private ObjectSet<TemplateGroup> _TemplateGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionChannel> TransactionChannels
        {
            get
            {
                if ((_TransactionChannels == null))
                {
                    _TransactionChannels = base.CreateObjectSet<TransactionChannel>("TransactionChannels");
                }
                return _TransactionChannels;
            }
        }
        private ObjectSet<TransactionChannel> _TransactionChannels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionData> TransactionDatas
        {
            get
            {
                if ((_TransactionDatas == null))
                {
                    _TransactionDatas = base.CreateObjectSet<TransactionData>("TransactionDatas");
                }
                return _TransactionDatas;
            }
        }
        private ObjectSet<TransactionData> _TransactionDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionDefinition> TransactionDefinitions
        {
            get
            {
                if ((_TransactionDefinitions == null))
                {
                    _TransactionDefinitions = base.CreateObjectSet<TransactionDefinition>("TransactionDefinitions");
                }
                return _TransactionDefinitions;
            }
        }
        private ObjectSet<TransactionDefinition> _TransactionDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransDataType> TransDataTypes
        {
            get
            {
                if ((_TransDataTypes == null))
                {
                    _TransDataTypes = base.CreateObjectSet<TransDataType>("TransDataTypes");
                }
                return _TransDataTypes;
            }
        }
        private ObjectSet<TransDataType> _TransDataTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionContactPoint> TransactionContactPoints
        {
            get
            {
                if ((_TransactionContactPoints == null))
                {
                    _TransactionContactPoints = base.CreateObjectSet<TransactionContactPoint>("TransactionContactPoints");
                }
                return _TransactionContactPoints;
            }
        }
        private ObjectSet<TransactionContactPoint> _TransactionContactPoints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionEntity> TransactionEntities
        {
            get
            {
                if ((_TransactionEntities == null))
                {
                    _TransactionEntities = base.CreateObjectSet<TransactionEntity>("TransactionEntities");
                }
                return _TransactionEntities;
            }
        }
        private ObjectSet<TransactionEntity> _TransactionEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Email> Emails
        {
            get
            {
                if ((_Emails == null))
                {
                    _Emails = base.CreateObjectSet<Email>("Emails");
                }
                return _Emails;
            }
        }
        private ObjectSet<Email> _Emails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelBatch> ChannelBatches
        {
            get
            {
                if ((_ChannelBatches == null))
                {
                    _ChannelBatches = base.CreateObjectSet<ChannelBatch>("ChannelBatches");
                }
                return _ChannelBatches;
            }
        }
        private ObjectSet<ChannelBatch> _ChannelBatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelBatchTransaction> ChannelBatchTransactions
        {
            get
            {
                if ((_ChannelBatchTransactions == null))
                {
                    _ChannelBatchTransactions = base.CreateObjectSet<ChannelBatchTransaction>("ChannelBatchTransactions");
                }
                return _ChannelBatchTransactions;
            }
        }
        private ObjectSet<ChannelBatchTransaction> _ChannelBatchTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MergeBatchTransaction> MergeBatchTransactions
        {
            get
            {
                if ((_MergeBatchTransactions == null))
                {
                    _MergeBatchTransactions = base.CreateObjectSet<MergeBatchTransaction>("MergeBatchTransactions");
                }
                return _MergeBatchTransactions;
            }
        }
        private ObjectSet<MergeBatchTransaction> _MergeBatchTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobDefinition> JobDefinitions
        {
            get
            {
                if ((_JobDefinitions == null))
                {
                    _JobDefinitions = base.CreateObjectSet<JobDefinition>("JobDefinitions");
                }
                return _JobDefinitions;
            }
        }
        private ObjectSet<JobDefinition> _JobDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BouncedMail> BouncedMails
        {
            get
            {
                if ((_BouncedMails == null))
                {
                    _BouncedMails = base.CreateObjectSet<BouncedMail>("BouncedMails");
                }
                return _BouncedMails;
            }
        }
        private ObjectSet<BouncedMail> _BouncedMails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Audit> Audits
        {
            get
            {
                if ((_Audits == null))
                {
                    _Audits = base.CreateObjectSet<Audit>("Audits");
                }
                return _Audits;
            }
        }
        private ObjectSet<Audit> _Audits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MergeBatch> MergeBatches
        {
            get
            {
                if ((_MergeBatches == null))
                {
                    _MergeBatches = base.CreateObjectSet<MergeBatch>("MergeBatches");
                }
                return _MergeBatches;
            }
        }
        private ObjectSet<MergeBatch> _MergeBatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MergeBatchState> MergeBatchStates
        {
            get
            {
                if ((_MergeBatchStates == null))
                {
                    _MergeBatchStates = base.CreateObjectSet<MergeBatchState>("MergeBatchStates");
                }
                return _MergeBatchStates;
            }
        }
        private ObjectSet<MergeBatchState> _MergeBatchStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Batches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatches(Batch batch)
        {
            base.AddObject("Batches", batch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Channels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannels(Channel channel)
        {
            base.AddObject("Channels", channel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelSequences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelSequences(ChannelSequence channelSequence)
        {
            base.AddObject("ChannelSequences", channelSequence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocStores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocStores(DocStore docStore)
        {
            base.AddObject("DocStores", docStore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Engines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEngines(Engine engine)
        {
            base.AddObject("Engines", engine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobDefChannels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobDefChannels(JobDefChannel jobDefChannel)
        {
            base.AddObject("JobDefChannels", jobDefChannel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Packages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackages(Package package)
        {
            base.AddObject("Packages", package);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrinterDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrinterDetails(PrinterDetail printerDetail)
        {
            base.AddObject("PrinterDetails", printerDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrinterTrays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrinterTrays(PrinterTray printerTray)
        {
            base.AddObject("PrinterTrays", printerTray);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrintSuppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrintSuppliers(PrintSupplier printSupplier)
        {
            base.AddObject("PrintSuppliers", printSupplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stuffers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStuffers(Stuffer stuffer)
        {
            base.AddObject("Stuffers", stuffer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StufferGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStufferGroups(StufferGroup stufferGroup)
        {
            base.AddObject("StufferGroups", stufferGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Templates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplates(Template template)
        {
            base.AddObject("Templates", template);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TemplateGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplateGroups(TemplateGroup templateGroup)
        {
            base.AddObject("TemplateGroups", templateGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionChannels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionChannels(TransactionChannel transactionChannel)
        {
            base.AddObject("TransactionChannels", transactionChannel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionDatas(TransactionData transactionData)
        {
            base.AddObject("TransactionDatas", transactionData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionDefinitions(TransactionDefinition transactionDefinition)
        {
            base.AddObject("TransactionDefinitions", transactionDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransDataTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransDataTypes(TransDataType transDataType)
        {
            base.AddObject("TransDataTypes", transDataType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionContactPoints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionContactPoints(TransactionContactPoint transactionContactPoint)
        {
            base.AddObject("TransactionContactPoints", transactionContactPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionEntities(TransactionEntity transactionEntity)
        {
            base.AddObject("TransactionEntities", transactionEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Emails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmails(Email email)
        {
            base.AddObject("Emails", email);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelBatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelBatches(ChannelBatch channelBatch)
        {
            base.AddObject("ChannelBatches", channelBatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelBatchTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelBatchTransactions(ChannelBatchTransaction channelBatchTransaction)
        {
            base.AddObject("ChannelBatchTransactions", channelBatchTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MergeBatchTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMergeBatchTransactions(MergeBatchTransaction mergeBatchTransaction)
        {
            base.AddObject("MergeBatchTransactions", mergeBatchTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobDefinitions(JobDefinition jobDefinition)
        {
            base.AddObject("JobDefinitions", jobDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BouncedMails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBouncedMails(BouncedMail bouncedMail)
        {
            base.AddObject("BouncedMails", bouncedMail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Audits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAudits(Audit audit)
        {
            base.AddObject("Audits", audit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MergeBatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMergeBatches(MergeBatch mergeBatch)
        {
            base.AddObject("MergeBatches", mergeBatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MergeBatchStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMergeBatchStates(MergeBatchState mergeBatchState)
        {
            base.AddObject("MergeBatchStates", mergeBatchState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Account CreateAccount(global::System.Int32 keyId)
        {
            Account account = new Account();
            account.KeyId = keyId;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentKeyId
        {
            get
            {
                return _ParentKeyId;
            }
            set
            {
                OnParentKeyIdChanging(value);
                ReportPropertyChanging("ParentKeyId");
                _ParentKeyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentKeyId");
                OnParentKeyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentKeyId;
        partial void OnParentKeyIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountName
        {
            get
            {
                return _AccountName;
            }
            set
            {
                OnAccountNameChanging(value);
                ReportPropertyChanging("AccountName");
                _AccountName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountName");
                OnAccountNameChanged();
            }
        }
        private global::System.String _AccountName;
        partial void OnAccountNameChanging(global::System.String value);
        partial void OnAccountNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LineOfBusiness
        {
            get
            {
                return _LineOfBusiness;
            }
            set
            {
                OnLineOfBusinessChanging(value);
                ReportPropertyChanging("LineOfBusiness");
                _LineOfBusiness = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LineOfBusiness");
                OnLineOfBusinessChanged();
            }
        }
        private global::System.String _LineOfBusiness;
        partial void OnLineOfBusinessChanging(global::System.String value);
        partial void OnLineOfBusinessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessArea
        {
            get
            {
                return _BusinessArea;
            }
            set
            {
                OnBusinessAreaChanging(value);
                ReportPropertyChanging("BusinessArea");
                _BusinessArea = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessArea");
                OnBusinessAreaChanged();
            }
        }
        private global::System.String _BusinessArea;
        partial void OnBusinessAreaChanging(global::System.String value);
        partial void OnBusinessAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestPath
        {
            get
            {
                return _RequestPath;
            }
            set
            {
                OnRequestPathChanging(value);
                ReportPropertyChanging("RequestPath");
                _RequestPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestPath");
                OnRequestPathChanged();
            }
        }
        private global::System.String _RequestPath;
        partial void OnRequestPathChanging(global::System.String value);
        partial void OnRequestPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentPath
        {
            get
            {
                return _DocumentPath;
            }
            set
            {
                OnDocumentPathChanging(value);
                ReportPropertyChanging("DocumentPath");
                _DocumentPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentPath");
                OnDocumentPathChanged();
            }
        }
        private global::System.String _DocumentPath;
        partial void OnDocumentPathChanging(global::System.String value);
        partial void OnDocumentPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RejectPath
        {
            get
            {
                return _RejectPath;
            }
            set
            {
                OnRejectPathChanging(value);
                ReportPropertyChanging("RejectPath");
                _RejectPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RejectPath");
                OnRejectPathChanged();
            }
        }
        private global::System.String _RejectPath;
        partial void OnRejectPathChanging(global::System.String value);
        partial void OnRejectPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplatePath
        {
            get
            {
                return _TemplatePath;
            }
            set
            {
                OnTemplatePathChanging(value);
                ReportPropertyChanging("TemplatePath");
                _TemplatePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplatePath");
                OnTemplatePathChanged();
            }
        }
        private global::System.String _TemplatePath;
        partial void OnTemplatePathChanging(global::System.String value);
        partial void OnTemplatePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OutPath
        {
            get
            {
                return _OutPath;
            }
            set
            {
                OnOutPathChanging(value);
                ReportPropertyChanging("OutPath");
                _OutPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OutPath");
                OnOutPathChanged();
            }
        }
        private global::System.String _OutPath;
        partial void OnOutPathChanging(global::System.String value);
        partial void OnOutPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prefix
        {
            get
            {
                return _Prefix;
            }
            set
            {
                OnPrefixChanging(value);
                ReportPropertyChanging("Prefix");
                _Prefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prefix");
                OnPrefixChanged();
            }
        }
        private global::System.String _Prefix;
        partial void OnPrefixChanging(global::System.String value);
        partial void OnPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Counter
        {
            get
            {
                return _Counter;
            }
            set
            {
                OnCounterChanging(value);
                ReportPropertyChanging("Counter");
                _Counter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Counter");
                OnCounterChanged();
            }
        }
        private Nullable<global::System.Int32> _Counter;
        partial void OnCounterChanging(Nullable<global::System.Int32> value);
        partial void OnCounterChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Account_Account", "Account1")]
        public EntityCollection<Account> Account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("SaGECorrespondenceModel.FK_Account_Account", "Account1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("SaGECorrespondenceModel.FK_Account_Account", "Account1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Account_Account", "Account")]
        public Account Account2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_Account_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_Account_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> Account2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_Account_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("SaGECorrespondenceModel.FK_Account_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_StufferGroup_Account", "StufferGroup")]
        public EntityCollection<StufferGroup> StufferGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StufferGroup>("SaGECorrespondenceModel.FK_StufferGroup_Account", "StufferGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StufferGroup>("SaGECorrespondenceModel.FK_StufferGroup_Account", "StufferGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TemplateGroup_Account", "TemplateGroup")]
        public EntityCollection<TemplateGroup> TemplateGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateGroup>("SaGECorrespondenceModel.FK_TemplateGroup_Account", "TemplateGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateGroup>("SaGECorrespondenceModel.FK_TemplateGroup_Account", "TemplateGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionDefinition_Account", "TransactionDefinition")]
        public EntityCollection<TransactionDefinition> TransactionDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionDefinition>("SaGECorrespondenceModel.FK_TransactionDefinition_Account", "TransactionDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionDefinition>("SaGECorrespondenceModel.FK_TransactionDefinition_Account", "TransactionDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_JobDefinition_Account", "JobDefinition")]
        public EntityCollection<JobDefinition> JobDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobDefinition>("SaGECorrespondenceModel.FK_JobDefinition_Account", "JobDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobDefinition>("SaGECorrespondenceModel.FK_JobDefinition_Account", "JobDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Audit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Audit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Audit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        public static Audit CreateAudit(global::System.Int32 id, global::System.String clientId, global::System.String filename)
        {
            Audit audit = new Audit();
            audit.Id = id;
            audit.ClientId = clientId;
            audit.Filename = filename;
            return audit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.String _ClientId;
        partial void OnClientIdChanging(global::System.String value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSent
        {
            get
            {
                return _DateSent;
            }
            set
            {
                OnDateSentChanging(value);
                ReportPropertyChanging("DateSent");
                _DateSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSent");
                OnDateSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSent;
        partial void OnDateSentChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Channel
        {
            get
            {
                return _Channel;
            }
            set
            {
                OnChannelChanging(value);
                ReportPropertyChanging("Channel");
                _Channel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Channel");
                OnChannelChanged();
            }
        }
        private global::System.String _Channel;
        partial void OnChannelChanging(global::System.String value);
        partial void OnChannelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Batch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Batch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Batch object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Batch CreateBatch(global::System.Int32 keyId)
        {
            Batch batch = new Batch();
            batch.KeyId = keyId;
            return batch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDate;
        partial void OnExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Engine
        {
            get
            {
                return _Engine;
            }
            set
            {
                OnEngineChanging(value);
                ReportPropertyChanging("Engine");
                _Engine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Engine");
                OnEngineChanged();
            }
        }
        private Nullable<global::System.Int32> _Engine;
        partial void OnEngineChanging(Nullable<global::System.Int32> value);
        partial void OnEngineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobType
        {
            get
            {
                return _JobType;
            }
            set
            {
                OnJobTypeChanging(value);
                ReportPropertyChanging("JobType");
                _JobType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobType");
                OnJobTypeChanged();
            }
        }
        private global::System.String _JobType;
        partial void OnJobTypeChanging(global::System.String value);
        partial void OnJobTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Batch_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_Batch_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_Batch_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_Batch_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("SaGECorrespondenceModel.FK_Batch_Job", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="BouncedMail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BouncedMail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BouncedMail object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static BouncedMail CreateBouncedMail(global::System.Int32 keyId)
        {
            BouncedMail bouncedMail = new BouncedMail();
            bouncedMail.KeyId = keyId;
            return bouncedMail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailAddress
        {
            get
            {
                return _MailAddress;
            }
            set
            {
                OnMailAddressChanging(value);
                ReportPropertyChanging("MailAddress");
                _MailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailAddress");
                OnMailAddressChanged();
            }
        }
        private global::System.String _MailAddress;
        partial void OnMailAddressChanging(global::System.String value);
        partial void OnMailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Processed
        {
            get
            {
                return _Processed;
            }
            set
            {
                OnProcessedChanging(value);
                ReportPropertyChanging("Processed");
                _Processed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Processed");
                OnProcessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Processed;
        partial void OnProcessedChanging(Nullable<global::System.Boolean> value);
        partial void OnProcessedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Channel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Channel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Channel object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Channel CreateChannel(global::System.Int32 keyId)
        {
            Channel channel = new Channel();
            channel.KeyId = keyId;
            return channel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelData_Channel", "TransactionChannel")]
        public EntityCollection<TransactionChannel> TransactionChannels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionChannel>("SaGECorrespondenceModel.FK_ChannelData_Channel", "TransactionChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionChannel>("SaGECorrespondenceModel.FK_ChannelData_Channel", "TransactionChannel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel", "ChannelSequence")]
        public EntityCollection<ChannelSequence> ChannelSequences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_Channel", "ChannelSequence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_Channel", "ChannelSequence", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel1", "ChannelSequence")]
        public EntityCollection<ChannelSequence> ChannelSequences1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_Channel1", "ChannelSequence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_Channel1", "ChannelSequence", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel2", "ChannelSequence")]
        public EntityCollection<ChannelSequence> ChannelSequences2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_Channel2", "ChannelSequence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_Channel2", "ChannelSequence", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_JobDefChannels_Channel", "JobDefChannels")]
        public EntityCollection<JobDefChannel> JobDefChannels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobDefChannel>("SaGECorrespondenceModel.FK_JobDefChannels_Channel", "JobDefChannels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobDefChannel>("SaGECorrespondenceModel.FK_JobDefChannels_Channel", "JobDefChannels", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Transaction_Channel", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("SaGECorrespondenceModel.FK_Transaction_Channel", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("SaGECorrespondenceModel.FK_Transaction_Channel", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelBatch_Channel", "ChannelBatch")]
        public EntityCollection<ChannelBatch> ChannelBatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelBatch_Channel", "ChannelBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelBatch_Channel", "ChannelBatch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="ChannelBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelBatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelBatch object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static ChannelBatch CreateChannelBatch(global::System.Int32 keyId)
        {
            ChannelBatch channelBatch = new ChannelBatch();
            channelBatch.KeyId = keyId;
            return channelBatch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelId
        {
            get
            {
                return _ChannelId;
            }
            set
            {
                OnChannelIdChanging(value);
                ReportPropertyChanging("ChannelId");
                _ChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelId");
                OnChannelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelId;
        partial void OnChannelIdChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelBatch_Channel", "Channel")]
        public Channel Channel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelBatch_Channel", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelBatch_Channel", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> ChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelBatch_Channel", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelBatch_Channel", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelBatch_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_ChannelBatch_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_ChannelBatch_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_ChannelBatch_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("SaGECorrespondenceModel.FK_ChannelBatch_Job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelTransaction_ChannelBatch", "ChannelBatchTransaction")]
        public EntityCollection<ChannelBatchTransaction> ChannelBatchTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelBatchTransaction>("SaGECorrespondenceModel.FK_ChannelTransaction_ChannelBatch", "ChannelBatchTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelBatchTransaction>("SaGECorrespondenceModel.FK_ChannelTransaction_ChannelBatch", "ChannelBatchTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="ChannelBatchTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelBatchTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelBatchTransaction object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static ChannelBatchTransaction CreateChannelBatchTransaction(global::System.Int32 keyId)
        {
            ChannelBatchTransaction channelBatchTransaction = new ChannelBatchTransaction();
            channelBatchTransaction.KeyId = keyId;
            return channelBatchTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelBatchId
        {
            get
            {
                return _ChannelBatchId;
            }
            set
            {
                OnChannelBatchIdChanging(value);
                ReportPropertyChanging("ChannelBatchId");
                _ChannelBatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelBatchId");
                OnChannelBatchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelBatchId;
        partial void OnChannelBatchIdChanging(Nullable<global::System.Int32> value);
        partial void OnChannelBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionId;
        partial void OnTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelTransaction_ChannelBatch", "ChannelBatch")]
        public ChannelBatch ChannelBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelTransaction_ChannelBatch", "ChannelBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelTransaction_ChannelBatch", "ChannelBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChannelBatch> ChannelBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelTransaction_ChannelBatch", "ChannelBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelTransaction_ChannelBatch", "ChannelBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelTransaction_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelTransaction_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelTransaction_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelTransaction_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelTransaction_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="ChannelSequence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelSequence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelSequence object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static ChannelSequence CreateChannelSequence(global::System.Int32 keyId)
        {
            ChannelSequence channelSequence = new ChannelSequence();
            channelSequence.KeyId = keyId;
            return channelSequence;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobDefId
        {
            get
            {
                return _JobDefId;
            }
            set
            {
                OnJobDefIdChanging(value);
                ReportPropertyChanging("JobDefId");
                _JobDefId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobDefId");
                OnJobDefIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobDefId;
        partial void OnJobDefIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobDefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentChannelId
        {
            get
            {
                return _CurrentChannelId;
            }
            set
            {
                OnCurrentChannelIdChanging(value);
                ReportPropertyChanging("CurrentChannelId");
                _CurrentChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentChannelId");
                OnCurrentChannelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentChannelId;
        partial void OnCurrentChannelIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NextChannelIdSuccess
        {
            get
            {
                return _NextChannelIdSuccess;
            }
            set
            {
                OnNextChannelIdSuccessChanging(value);
                ReportPropertyChanging("NextChannelIdSuccess");
                _NextChannelIdSuccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextChannelIdSuccess");
                OnNextChannelIdSuccessChanged();
            }
        }
        private Nullable<global::System.Int32> _NextChannelIdSuccess;
        partial void OnNextChannelIdSuccessChanging(Nullable<global::System.Int32> value);
        partial void OnNextChannelIdSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NextChannelIdFail
        {
            get
            {
                return _NextChannelIdFail;
            }
            set
            {
                OnNextChannelIdFailChanging(value);
                ReportPropertyChanging("NextChannelIdFail");
                _NextChannelIdFail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextChannelIdFail");
                OnNextChannelIdFailChanged();
            }
        }
        private Nullable<global::System.Int32> _NextChannelIdFail;
        partial void OnNextChannelIdFailChanging(Nullable<global::System.Int32> value);
        partial void OnNextChannelIdFailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel", "Channel")]
        public Channel Channel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> ChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel1", "Channel")]
        public Channel Channel1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel1", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel1", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> Channel1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel1", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel1", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_Channel2", "Channel")]
        public Channel Channel2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel2", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel2", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> Channel2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel2", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelSequence_Channel2", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_JobDefinition", "JobDefinition")]
        public JobDefinition JobDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_ChannelSequence_JobDefinition", "JobDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_ChannelSequence_JobDefinition", "JobDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobDefinition> JobDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_ChannelSequence_JobDefinition", "JobDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_ChannelSequence_JobDefinition", "JobDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="DocStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocStore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocStore object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static DocStore CreateDocStore(global::System.Int32 keyId)
        {
            DocStore docStore = new DocStore();
            docStore.KeyId = keyId;
            return docStore;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobDefId
        {
            get
            {
                return _JobDefId;
            }
            set
            {
                OnJobDefIdChanging(value);
                ReportPropertyChanging("JobDefId");
                _JobDefId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobDefId");
                OnJobDefIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobDefId;
        partial void OnJobDefIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobDefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LineOfBusiness
        {
            get
            {
                return _LineOfBusiness;
            }
            set
            {
                OnLineOfBusinessChanging(value);
                ReportPropertyChanging("LineOfBusiness");
                _LineOfBusiness = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LineOfBusiness");
                OnLineOfBusinessChanged();
            }
        }
        private global::System.String _LineOfBusiness;
        partial void OnLineOfBusinessChanging(global::System.String value);
        partial void OnLineOfBusinessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Process
        {
            get
            {
                return _Process;
            }
            set
            {
                OnProcessChanging(value);
                ReportPropertyChanging("Process");
                _Process = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Process");
                OnProcessChanged();
            }
        }
        private global::System.String _Process;
        partial void OnProcessChanging(global::System.String value);
        partial void OnProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.String _Permission;
        partial void OnPermissionChanging(global::System.String value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_DocStore_JobDefinition", "JobDefinition")]
        public JobDefinition JobDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_DocStore_JobDefinition", "JobDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_DocStore_JobDefinition", "JobDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobDefinition> JobDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_DocStore_JobDefinition", "JobDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_DocStore_JobDefinition", "JobDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Email")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Email : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Email object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Email CreateEmail(global::System.Int32 keyId)
        {
            Email email = new Email();
            email.KeyId = keyId;
            return email;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobDefId
        {
            get
            {
                return _JobDefId;
            }
            set
            {
                OnJobDefIdChanging(value);
                ReportPropertyChanging("JobDefId");
                _JobDefId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobDefId");
                OnJobDefIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobDefId;
        partial void OnJobDefIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobDefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FromAddress
        {
            get
            {
                return _FromAddress;
            }
            set
            {
                OnFromAddressChanging(value);
                ReportPropertyChanging("FromAddress");
                _FromAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromAddress");
                OnFromAddressChanged();
            }
        }
        private global::System.String _FromAddress;
        partial void OnFromAddressChanging(global::System.String value);
        partial void OnFromAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BCC
        {
            get
            {
                return _BCC;
            }
            set
            {
                OnBCCChanging(value);
                ReportPropertyChanging("BCC");
                _BCC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BCC");
                OnBCCChanged();
            }
        }
        private global::System.String _BCC;
        partial void OnBCCChanging(global::System.String value);
        partial void OnBCCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubjectEnglish
        {
            get
            {
                return _SubjectEnglish;
            }
            set
            {
                OnSubjectEnglishChanging(value);
                ReportPropertyChanging("SubjectEnglish");
                _SubjectEnglish = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubjectEnglish");
                OnSubjectEnglishChanged();
            }
        }
        private global::System.String _SubjectEnglish;
        partial void OnSubjectEnglishChanging(global::System.String value);
        partial void OnSubjectEnglishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubjectAfrikaans
        {
            get
            {
                return _SubjectAfrikaans;
            }
            set
            {
                OnSubjectAfrikaansChanging(value);
                ReportPropertyChanging("SubjectAfrikaans");
                _SubjectAfrikaans = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubjectAfrikaans");
                OnSubjectAfrikaansChanged();
            }
        }
        private global::System.String _SubjectAfrikaans;
        partial void OnSubjectAfrikaansChanging(global::System.String value);
        partial void OnSubjectAfrikaansChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EngTemplateId
        {
            get
            {
                return _EngTemplateId;
            }
            set
            {
                OnEngTemplateIdChanging(value);
                ReportPropertyChanging("EngTemplateId");
                _EngTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EngTemplateId");
                OnEngTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EngTemplateId;
        partial void OnEngTemplateIdChanging(Nullable<global::System.Int32> value);
        partial void OnEngTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AfrTemplateId
        {
            get
            {
                return _AfrTemplateId;
            }
            set
            {
                OnAfrTemplateIdChanging(value);
                ReportPropertyChanging("AfrTemplateId");
                _AfrTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AfrTemplateId");
                OnAfrTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AfrTemplateId;
        partial void OnAfrTemplateIdChanging(Nullable<global::System.Int32> value);
        partial void OnAfrTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttachmentFriendlyName
        {
            get
            {
                return _AttachmentFriendlyName;
            }
            set
            {
                OnAttachmentFriendlyNameChanging(value);
                ReportPropertyChanging("AttachmentFriendlyName");
                _AttachmentFriendlyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachmentFriendlyName");
                OnAttachmentFriendlyNameChanged();
            }
        }
        private global::System.String _AttachmentFriendlyName;
        partial void OnAttachmentFriendlyNameChanging(global::System.String value);
        partial void OnAttachmentFriendlyNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Email_Template", "Template")]
        public Template Template
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template", "Template").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template", "Template").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Template> TemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template", "Template");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template", "Template", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Email_Template1", "Template")]
        public Template Template1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template1", "Template").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template1", "Template").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Template> Template1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template1", "Template");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Template>("SaGECorrespondenceModel.FK_Email_Template1", "Template", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Stuffer_Email", "Stuffer")]
        public EntityCollection<Stuffer> Stuffers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stuffer>("SaGECorrespondenceModel.FK_Stuffer_Email", "Stuffer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stuffer>("SaGECorrespondenceModel.FK_Stuffer_Email", "Stuffer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Email_JobDefinition", "JobDefinition")]
        public JobDefinition JobDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Email_JobDefinition", "JobDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Email_JobDefinition", "JobDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobDefinition> JobDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Email_JobDefinition", "JobDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Email_JobDefinition", "JobDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Engine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Engine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Engine object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Engine CreateEngine(global::System.Int32 keyId)
        {
            Engine engine = new Engine();
            engine.KeyId = keyId;
            return engine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EngineType
        {
            get
            {
                return _EngineType;
            }
            set
            {
                OnEngineTypeChanging(value);
                ReportPropertyChanging("EngineType");
                _EngineType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EngineType");
                OnEngineTypeChanged();
            }
        }
        private global::System.String _EngineType;
        partial void OnEngineTypeChanging(global::System.String value);
        partial void OnEngineTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Job CreateJob(global::System.Int32 keyId)
        {
            Job job = new Job();
            job.KeyId = keyId;
            return job;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobDefId
        {
            get
            {
                return _JobDefId;
            }
            set
            {
                OnJobDefIdChanging(value);
                ReportPropertyChanging("JobDefId");
                _JobDefId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobDefId");
                OnJobDefIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobDefId;
        partial void OnJobDefIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobDefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private global::System.String _JobName;
        partial void OnJobNameChanging(global::System.String value);
        partial void OnJobNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourcePath
        {
            get
            {
                return _SourcePath;
            }
            set
            {
                OnSourcePathChanging(value);
                ReportPropertyChanging("SourcePath");
                _SourcePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourcePath");
                OnSourcePathChanged();
            }
        }
        private global::System.String _SourcePath;
        partial void OnSourcePathChanging(global::System.String value);
        partial void OnSourcePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LoadDate
        {
            get
            {
                return _LoadDate;
            }
            set
            {
                OnLoadDateChanging(value);
                ReportPropertyChanging("LoadDate");
                _LoadDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadDate");
                OnLoadDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LoadDate;
        partial void OnLoadDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLoadDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeliveryDate
        {
            get
            {
                return _DeliveryDate;
            }
            set
            {
                OnDeliveryDateChanging(value);
                ReportPropertyChanging("DeliveryDate");
                _DeliveryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryDate");
                OnDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeliveryDate;
        partial void OnDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Process
        {
            get
            {
                return _Process;
            }
            set
            {
                OnProcessChanging(value);
                ReportPropertyChanging("Process");
                _Process = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Process");
                OnProcessChanged();
            }
        }
        private global::System.String _Process;
        partial void OnProcessChanging(global::System.String value);
        partial void OnProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Batch_Job", "Batch")]
        public EntityCollection<Batch> Batches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("SaGECorrespondenceModel.FK_Batch_Job", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("SaGECorrespondenceModel.FK_Batch_Job", "Batch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_PrinterDetail_Job", "PrinterDetail")]
        public EntityCollection<PrinterDetail> PrinterDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterDetail_Job", "PrinterDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterDetail_Job", "PrinterDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Transaction_Job", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("SaGECorrespondenceModel.FK_Transaction_Job", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("SaGECorrespondenceModel.FK_Transaction_Job", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelBatch_Job", "ChannelBatch")]
        public EntityCollection<ChannelBatch> ChannelBatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelBatch_Job", "ChannelBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelBatch>("SaGECorrespondenceModel.FK_ChannelBatch_Job", "ChannelBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Job_JobDefinition", "JobDefinition")]
        public JobDefinition JobDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Job_JobDefinition", "JobDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Job_JobDefinition", "JobDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobDefinition> JobDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Job_JobDefinition", "JobDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_Job_JobDefinition", "JobDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="JobDefChannel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobDefChannel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobDefChannel object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        /// <param name="jobDefId">Initial value of the JobDefId property.</param>
        /// <param name="channelId">Initial value of the ChannelId property.</param>
        public static JobDefChannel CreateJobDefChannel(global::System.Int32 keyId, global::System.Int32 jobDefId, global::System.Int32 channelId)
        {
            JobDefChannel jobDefChannel = new JobDefChannel();
            jobDefChannel.KeyId = keyId;
            jobDefChannel.JobDefId = jobDefId;
            jobDefChannel.ChannelId = channelId;
            return jobDefChannel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobDefId
        {
            get
            {
                return _JobDefId;
            }
            set
            {
                OnJobDefIdChanging(value);
                ReportPropertyChanging("JobDefId");
                _JobDefId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobDefId");
                OnJobDefIdChanged();
            }
        }
        private global::System.Int32 _JobDefId;
        partial void OnJobDefIdChanging(global::System.Int32 value);
        partial void OnJobDefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelId
        {
            get
            {
                return _ChannelId;
            }
            set
            {
                OnChannelIdChanging(value);
                ReportPropertyChanging("ChannelId");
                _ChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelId");
                OnChannelIdChanged();
            }
        }
        private global::System.Int32 _ChannelId;
        partial void OnChannelIdChanging(global::System.Int32 value);
        partial void OnChannelIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_JobDefChannels_Channel", "Channel")]
        public Channel Channel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_JobDefChannels_Channel", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_JobDefChannels_Channel", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> ChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_JobDefChannels_Channel", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("SaGECorrespondenceModel.FK_JobDefChannels_Channel", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_JobDefChannels_JobDefinition", "JobDefinition")]
        public JobDefinition JobDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_JobDefChannels_JobDefinition", "JobDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_JobDefChannels_JobDefinition", "JobDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobDefinition> JobDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_JobDefChannels_JobDefinition", "JobDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobDefinition>("SaGECorrespondenceModel.FK_JobDefChannels_JobDefinition", "JobDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="JobDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobDefinition object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static JobDefinition CreateJobDefinition(global::System.Int32 keyId)
        {
            JobDefinition jobDefinition = new JobDefinition();
            jobDefinition.KeyId = keyId;
            return jobDefinition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountId;
        partial void OnAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EngineId
        {
            get
            {
                return _EngineId;
            }
            set
            {
                OnEngineIdChanging(value);
                ReportPropertyChanging("EngineId");
                _EngineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EngineId");
                OnEngineIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EngineId;
        partial void OnEngineIdChanging(Nullable<global::System.Int32> value);
        partial void OnEngineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private global::System.String _JobName;
        partial void OnJobNameChanging(global::System.String value);
        partial void OnJobNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataSource
        {
            get
            {
                return _DataSource;
            }
            set
            {
                OnDataSourceChanging(value);
                ReportPropertyChanging("DataSource");
                _DataSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataSource");
                OnDataSourceChanged();
            }
        }
        private global::System.String _DataSource;
        partial void OnDataSourceChanging(global::System.String value);
        partial void OnDataSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobType
        {
            get
            {
                return _JobType;
            }
            set
            {
                OnJobTypeChanging(value);
                ReportPropertyChanging("JobType");
                _JobType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobType");
                OnJobTypeChanged();
            }
        }
        private global::System.String _JobType;
        partial void OnJobTypeChanging(global::System.String value);
        partial void OnJobTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BatchItemCount
        {
            get
            {
                return _BatchItemCount;
            }
            set
            {
                OnBatchItemCountChanging(value);
                ReportPropertyChanging("BatchItemCount");
                _BatchItemCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchItemCount");
                OnBatchItemCountChanged();
            }
        }
        private Nullable<global::System.Int32> _BatchItemCount;
        partial void OnBatchItemCountChanging(Nullable<global::System.Int32> value);
        partial void OnBatchItemCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.String _Mode;
        partial void OnModeChanging(global::System.String value);
        partial void OnModeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_JobDefinition_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_JobDefinition_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_JobDefinition_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_JobDefinition_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("SaGECorrespondenceModel.FK_JobDefinition_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelSequence_JobDefinition", "ChannelSequence")]
        public EntityCollection<ChannelSequence> ChannelSequences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_JobDefinition", "ChannelSequence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelSequence>("SaGECorrespondenceModel.FK_ChannelSequence_JobDefinition", "ChannelSequence", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Email_JobDefinition", "Email")]
        public EntityCollection<Email> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Email>("SaGECorrespondenceModel.FK_Email_JobDefinition", "Email");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Email>("SaGECorrespondenceModel.FK_Email_JobDefinition", "Email", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_JobDefChannels_JobDefinition", "JobDefChannel")]
        public EntityCollection<JobDefChannel> JobDefChannels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobDefChannel>("SaGECorrespondenceModel.FK_JobDefChannels_JobDefinition", "JobDefChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobDefChannel>("SaGECorrespondenceModel.FK_JobDefChannels_JobDefinition", "JobDefChannel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_DocStore_JobDefinition", "DocStore")]
        public EntityCollection<DocStore> DocStores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocStore>("SaGECorrespondenceModel.FK_DocStore_JobDefinition", "DocStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocStore>("SaGECorrespondenceModel.FK_DocStore_JobDefinition", "DocStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Job_JobDefinition", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("SaGECorrespondenceModel.FK_Job_JobDefinition", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("SaGECorrespondenceModel.FK_Job_JobDefinition", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="MergeBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MergeBatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MergeBatch object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static MergeBatch CreateMergeBatch(global::System.Int32 keyId, global::System.Int32 jobId, global::System.Int32 state)
        {
            MergeBatch mergeBatch = new MergeBatch();
            mergeBatch.KeyId = keyId;
            mergeBatch.JobId = jobId;
            mergeBatch.State = state;
            return mergeBatch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelId
        {
            get
            {
                return _ChannelId;
            }
            set
            {
                OnChannelIdChanging(value);
                ReportPropertyChanging("ChannelId");
                _ChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelId");
                OnChannelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelId;
        partial void OnChannelIdChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Engine
        {
            get
            {
                return _Engine;
            }
            set
            {
                OnEngineChanging(value);
                ReportPropertyChanging("Engine");
                _Engine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Engine");
                OnEngineChanged();
            }
        }
        private Nullable<global::System.Int32> _Engine;
        partial void OnEngineChanging(Nullable<global::System.Int32> value);
        partial void OnEngineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatchTransaction_MergeBatch", "MergeBatchTransaction")]
        public EntityCollection<MergeBatchTransaction> MergeBatchTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MergeBatchTransaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_MergeBatch", "MergeBatchTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MergeBatchTransaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_MergeBatch", "MergeBatchTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatch_MergeBatchState", "MergeBatchState")]
        public MergeBatchState MergeBatchState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatch_MergeBatchState", "MergeBatchState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatch_MergeBatchState", "MergeBatchState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MergeBatchState> MergeBatchStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatch_MergeBatchState", "MergeBatchState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatch_MergeBatchState", "MergeBatchState", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="MergeBatchState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MergeBatchState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MergeBatchState object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static MergeBatchState CreateMergeBatchState(global::System.Int32 keyId)
        {
            MergeBatchState mergeBatchState = new MergeBatchState();
            mergeBatchState.KeyId = keyId;
            return mergeBatchState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatch_MergeBatchState", "MergeBatch")]
        public EntityCollection<MergeBatch> MergeBatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MergeBatch>("SaGECorrespondenceModel.FK_MergeBatch_MergeBatchState", "MergeBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MergeBatch>("SaGECorrespondenceModel.FK_MergeBatch_MergeBatchState", "MergeBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatchState_MergeBatchState", "MergeBatchState1")]
        public MergeBatchState MergeBatchState1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MergeBatchState> MergeBatchState1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatchState_MergeBatchState", "MergeBatchState")]
        public MergeBatchState MergeBatchState2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MergeBatchState> MergeBatchState2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MergeBatchState>("SaGECorrespondenceModel.FK_MergeBatchState_MergeBatchState", "MergeBatchState", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="MergeBatchTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MergeBatchTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MergeBatchTransaction object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        /// <param name="mergeBatchId">Initial value of the MergeBatchId property.</param>
        public static MergeBatchTransaction CreateMergeBatchTransaction(global::System.Int32 keyId, global::System.Int32 mergeBatchId)
        {
            MergeBatchTransaction mergeBatchTransaction = new MergeBatchTransaction();
            mergeBatchTransaction.KeyId = keyId;
            mergeBatchTransaction.MergeBatchId = mergeBatchId;
            return mergeBatchTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MergeBatchId
        {
            get
            {
                return _MergeBatchId;
            }
            set
            {
                OnMergeBatchIdChanging(value);
                ReportPropertyChanging("MergeBatchId");
                _MergeBatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MergeBatchId");
                OnMergeBatchIdChanged();
            }
        }
        private global::System.Int32 _MergeBatchId;
        partial void OnMergeBatchIdChanging(global::System.Int32 value);
        partial void OnMergeBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionId;
        partial void OnTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatchTransaction_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_Transaction", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatchTransaction_MergeBatch", "MergeBatch")]
        public MergeBatch MergeBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatch>("SaGECorrespondenceModel.FK_MergeBatchTransaction_MergeBatch", "MergeBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatch>("SaGECorrespondenceModel.FK_MergeBatchTransaction_MergeBatch", "MergeBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MergeBatch> MergeBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MergeBatch>("SaGECorrespondenceModel.FK_MergeBatchTransaction_MergeBatch", "MergeBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MergeBatch>("SaGECorrespondenceModel.FK_MergeBatchTransaction_MergeBatch", "MergeBatch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Package")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Package : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Package object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Package CreatePackage(global::System.Int32 keyId)
        {
            Package package = new Package();
            package.KeyId = keyId;
            return package;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobDefId
        {
            get
            {
                return _JobDefId;
            }
            set
            {
                OnJobDefIdChanging(value);
                ReportPropertyChanging("JobDefId");
                _JobDefId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobDefId");
                OnJobDefIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobDefId;
        partial void OnJobDefIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobDefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOBId
        {
            get
            {
                return _LOBId;
            }
            set
            {
                OnLOBIdChanging(value);
                ReportPropertyChanging("LOBId");
                _LOBId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOBId");
                OnLOBIdChanged();
            }
        }
        private global::System.String _LOBId;
        partial void OnLOBIdChanging(global::System.String value);
        partial void OnLOBIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="PrinterDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrinterDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrinterDetail object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static PrinterDetail CreatePrinterDetail(global::System.Int32 keyId)
        {
            PrinterDetail printerDetail = new PrinterDetail();
            printerDetail.KeyId = keyId;
            return printerDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierId
        {
            get
            {
                return _SupplierId;
            }
            set
            {
                OnSupplierIdChanging(value);
                ReportPropertyChanging("SupplierId");
                _SupplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierId");
                OnSupplierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierId;
        partial void OnSupplierIdChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrintType
        {
            get
            {
                return _PrintType;
            }
            set
            {
                OnPrintTypeChanging(value);
                ReportPropertyChanging("PrintType");
                _PrintType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrintType");
                OnPrintTypeChanged();
            }
        }
        private global::System.String _PrintType;
        partial void OnPrintTypeChanging(global::System.String value);
        partial void OnPrintTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Default
        {
            get
            {
                return _Default;
            }
            set
            {
                OnDefaultChanging(value);
                ReportPropertyChanging("Default");
                _Default = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Default");
                OnDefaultChanged();
            }
        }
        private global::System.String _Default;
        partial void OnDefaultChanging(global::System.String value);
        partial void OnDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_PrinterDetail_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_PrinterDetail_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_PrinterDetail_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_PrinterDetail_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("SaGECorrespondenceModel.FK_PrinterDetail_Job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_PrinterDetail_PrintSupplier", "PrintSupplier")]
        public PrintSupplier PrintSupplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrintSupplier>("SaGECorrespondenceModel.FK_PrinterDetail_PrintSupplier", "PrintSupplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrintSupplier>("SaGECorrespondenceModel.FK_PrinterDetail_PrintSupplier", "PrintSupplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrintSupplier> PrintSupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrintSupplier>("SaGECorrespondenceModel.FK_PrinterDetail_PrintSupplier", "PrintSupplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrintSupplier>("SaGECorrespondenceModel.FK_PrinterDetail_PrintSupplier", "PrintSupplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_PrinterTray_PrinterDetail", "PrinterTray")]
        public EntityCollection<PrinterTray> PrinterTrays
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrinterTray>("SaGECorrespondenceModel.FK_PrinterTray_PrinterDetail", "PrinterTray");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrinterTray>("SaGECorrespondenceModel.FK_PrinterTray_PrinterDetail", "PrinterTray", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="PrinterTray")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrinterTray : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrinterTray object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static PrinterTray CreatePrinterTray(global::System.Int32 keyId)
        {
            PrinterTray printerTray = new PrinterTray();
            printerTray.KeyId = keyId;
            return printerTray;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrinterDetailId
        {
            get
            {
                return _PrinterDetailId;
            }
            set
            {
                OnPrinterDetailIdChanging(value);
                ReportPropertyChanging("PrinterDetailId");
                _PrinterDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrinterDetailId");
                OnPrinterDetailIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PrinterDetailId;
        partial void OnPrinterDetailIdChanging(Nullable<global::System.Int32> value);
        partial void OnPrinterDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tray
        {
            get
            {
                return _Tray;
            }
            set
            {
                OnTrayChanging(value);
                ReportPropertyChanging("Tray");
                _Tray = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tray");
                OnTrayChanged();
            }
        }
        private global::System.String _Tray;
        partial void OnTrayChanging(global::System.String value);
        partial void OnTrayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Stationery
        {
            get
            {
                return _Stationery;
            }
            set
            {
                OnStationeryChanging(value);
                ReportPropertyChanging("Stationery");
                _Stationery = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stationery");
                OnStationeryChanged();
            }
        }
        private global::System.String _Stationery;
        partial void OnStationeryChanging(global::System.String value);
        partial void OnStationeryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_PrinterTray_PrinterDetail", "PrinterDetail")]
        public PrinterDetail PrinterDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterTray_PrinterDetail", "PrinterDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterTray_PrinterDetail", "PrinterDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrinterDetail> PrinterDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterTray_PrinterDetail", "PrinterDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterTray_PrinterDetail", "PrinterDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="PrintSupplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrintSupplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrintSupplier object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static PrintSupplier CreatePrintSupplier(global::System.Int32 keyId)
        {
            PrintSupplier printSupplier = new PrintSupplier();
            printSupplier.KeyId = keyId;
            return printSupplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactInfo
        {
            get
            {
                return _ContactInfo;
            }
            set
            {
                OnContactInfoChanging(value);
                ReportPropertyChanging("ContactInfo");
                _ContactInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactInfo");
                OnContactInfoChanged();
            }
        }
        private global::System.String _ContactInfo;
        partial void OnContactInfoChanging(global::System.String value);
        partial void OnContactInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_PrinterDetail_PrintSupplier", "PrinterDetail")]
        public EntityCollection<PrinterDetail> PrinterDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterDetail_PrintSupplier", "PrinterDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrinterDetail>("SaGECorrespondenceModel.FK_PrinterDetail_PrintSupplier", "PrinterDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Stuffer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stuffer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stuffer object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Stuffer CreateStuffer(global::System.Int32 keyId)
        {
            Stuffer stuffer = new Stuffer();
            stuffer.KeyId = keyId;
            return stuffer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmailId;
        partial void OnEmailIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StufferGroupId
        {
            get
            {
                return _StufferGroupId;
            }
            set
            {
                OnStufferGroupIdChanging(value);
                ReportPropertyChanging("StufferGroupId");
                _StufferGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StufferGroupId");
                OnStufferGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StufferGroupId;
        partial void OnStufferGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnStufferGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StufferPath
        {
            get
            {
                return _StufferPath;
            }
            set
            {
                OnStufferPathChanging(value);
                ReportPropertyChanging("StufferPath");
                _StufferPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StufferPath");
                OnStufferPathChanged();
            }
        }
        private global::System.String _StufferPath;
        partial void OnStufferPathChanging(global::System.String value);
        partial void OnStufferPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StufferName
        {
            get
            {
                return _StufferName;
            }
            set
            {
                OnStufferNameChanging(value);
                ReportPropertyChanging("StufferName");
                _StufferName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StufferName");
                OnStufferNameChanged();
            }
        }
        private global::System.String _StufferName;
        partial void OnStufferNameChanging(global::System.String value);
        partial void OnStufferNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Stuffer_StufferGroup", "StufferGroup")]
        public StufferGroup StufferGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StufferGroup>("SaGECorrespondenceModel.FK_Stuffer_StufferGroup", "StufferGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StufferGroup>("SaGECorrespondenceModel.FK_Stuffer_StufferGroup", "StufferGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StufferGroup> StufferGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StufferGroup>("SaGECorrespondenceModel.FK_Stuffer_StufferGroup", "StufferGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StufferGroup>("SaGECorrespondenceModel.FK_Stuffer_StufferGroup", "StufferGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Stuffer_Email", "Email")]
        public Email Email
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Email>("SaGECorrespondenceModel.FK_Stuffer_Email", "Email").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Email>("SaGECorrespondenceModel.FK_Stuffer_Email", "Email").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Email> EmailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Email>("SaGECorrespondenceModel.FK_Stuffer_Email", "Email");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Email>("SaGECorrespondenceModel.FK_Stuffer_Email", "Email", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="StufferGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StufferGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StufferGroup object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static StufferGroup CreateStufferGroup(global::System.Int32 keyId)
        {
            StufferGroup stufferGroup = new StufferGroup();
            stufferGroup.KeyId = keyId;
            return stufferGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountId;
        partial void OnAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnAccountIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_StufferGroup_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_StufferGroup_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_StufferGroup_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_StufferGroup_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("SaGECorrespondenceModel.FK_StufferGroup_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Stuffer_StufferGroup", "Stuffer")]
        public EntityCollection<Stuffer> Stuffers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stuffer>("SaGECorrespondenceModel.FK_Stuffer_StufferGroup", "Stuffer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stuffer>("SaGECorrespondenceModel.FK_Stuffer_StufferGroup", "Stuffer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Template")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Template : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Template object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Template CreateTemplate(global::System.Int32 keyId)
        {
            Template template = new Template();
            template.KeyId = keyId;
            return template;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TemplateGroupId
        {
            get
            {
                return _TemplateGroupId;
            }
            set
            {
                OnTemplateGroupIdChanging(value);
                ReportPropertyChanging("TemplateGroupId");
                _TemplateGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateGroupId");
                OnTemplateGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TemplateGroupId;
        partial void OnTemplateGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnTemplateGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateName
        {
            get
            {
                return _TemplateName;
            }
            set
            {
                OnTemplateNameChanging(value);
                ReportPropertyChanging("TemplateName");
                _TemplateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateName");
                OnTemplateNameChanged();
            }
        }
        private global::System.String _TemplateName;
        partial void OnTemplateNameChanging(global::System.String value);
        partial void OnTemplateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Template_TemplateGroup", "TemplateGroup")]
        public TemplateGroup TemplateGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateGroup>("SaGECorrespondenceModel.FK_Template_TemplateGroup", "TemplateGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateGroup>("SaGECorrespondenceModel.FK_Template_TemplateGroup", "TemplateGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TemplateGroup> TemplateGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateGroup>("SaGECorrespondenceModel.FK_Template_TemplateGroup", "TemplateGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TemplateGroup>("SaGECorrespondenceModel.FK_Template_TemplateGroup", "TemplateGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Email_Template", "Email")]
        public EntityCollection<Email> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Email>("SaGECorrespondenceModel.FK_Email_Template", "Email");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Email>("SaGECorrespondenceModel.FK_Email_Template", "Email", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Email_Template1", "Email")]
        public EntityCollection<Email> Emails1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Email>("SaGECorrespondenceModel.FK_Email_Template1", "Email");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Email>("SaGECorrespondenceModel.FK_Email_Template1", "Email", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="TemplateGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemplateGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TemplateGroup object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static TemplateGroup CreateTemplateGroup(global::System.Int32 keyId)
        {
            TemplateGroup templateGroup = new TemplateGroup();
            templateGroup.KeyId = keyId;
            return templateGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountId;
        partial void OnAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnAccountIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TemplateGroup_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_TemplateGroup_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_TemplateGroup_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_TemplateGroup_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("SaGECorrespondenceModel.FK_TemplateGroup_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Template_TemplateGroup", "Template")]
        public EntityCollection<Template> Templates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Template>("SaGECorrespondenceModel.FK_Template_TemplateGroup", "Template");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Template>("SaGECorrespondenceModel.FK_Template_TemplateGroup", "Template", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static Transaction CreateTransaction(global::System.Int32 keyId)
        {
            Transaction transaction = new Transaction();
            transaction.KeyId = keyId;
            return transaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransactionDefinitionId
        {
            get
            {
                return _TransactionDefinitionId;
            }
            set
            {
                OnTransactionDefinitionIdChanging(value);
                ReportPropertyChanging("TransactionDefinitionId");
                _TransactionDefinitionId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransactionDefinitionId");
                OnTransactionDefinitionIdChanged();
            }
        }
        private global::System.String _TransactionDefinitionId;
        partial void OnTransactionDefinitionIdChanging(global::System.String value);
        partial void OnTransactionDefinitionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BatchId;
        partial void OnBatchIdChanging(Nullable<global::System.Int32> value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelId
        {
            get
            {
                return _ChannelId;
            }
            set
            {
                OnChannelIdChanging(value);
                ReportPropertyChanging("ChannelId");
                _ChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelId");
                OnChannelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelId;
        partial void OnChannelIdChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.String _ClientId;
        partial void OnClientIdChanging(global::System.String value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOBId
        {
            get
            {
                return _LOBId;
            }
            set
            {
                OnLOBIdChanging(value);
                ReportPropertyChanging("LOBId");
                _LOBId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOBId");
                OnLOBIdChanged();
            }
        }
        private global::System.String _LOBId;
        partial void OnLOBIdChanging(global::System.String value);
        partial void OnLOBIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOBKey
        {
            get
            {
                return _LOBKey;
            }
            set
            {
                OnLOBKeyChanging(value);
                ReportPropertyChanging("LOBKey");
                _LOBKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOBKey");
                OnLOBKeyChanged();
            }
        }
        private global::System.String _LOBKey;
        partial void OnLOBKeyChanging(global::System.String value);
        partial void OnLOBKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Locked;
        partial void OnLockedChanging(Nullable<global::System.Boolean> value);
        partial void OnLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockDate
        {
            get
            {
                return _LockDate;
            }
            set
            {
                OnLockDateChanging(value);
                ReportPropertyChanging("LockDate");
                _LockDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockDate");
                OnLockDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockDate;
        partial void OnLockDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLockDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Transaction_Channel", "Channel")]
        public Channel Channel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_Transaction_Channel", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_Transaction_Channel", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> ChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_Transaction_Channel", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("SaGECorrespondenceModel.FK_Transaction_Channel", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Transaction_Job", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_Transaction_Job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_Transaction_Job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("SaGECorrespondenceModel.FK_Transaction_Job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("SaGECorrespondenceModel.FK_Transaction_Job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelData_Transaction", "TransactionChannel")]
        public EntityCollection<TransactionChannel> TransactionChannels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionChannel>("SaGECorrespondenceModel.FK_ChannelData_Transaction", "TransactionChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionChannel>("SaGECorrespondenceModel.FK_ChannelData_Transaction", "TransactionChannel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Transaction_Transaction", "TransactionDefinition")]
        public TransactionDefinition TransactionDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionDefinition>("SaGECorrespondenceModel.FK_Transaction_Transaction", "TransactionDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionDefinition>("SaGECorrespondenceModel.FK_Transaction_Transaction", "TransactionDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionDefinition> TransactionDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionDefinition>("SaGECorrespondenceModel.FK_Transaction_Transaction", "TransactionDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionDefinition>("SaGECorrespondenceModel.FK_Transaction_Transaction", "TransactionDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransData_Transaction", "TransactionData")]
        public EntityCollection<TransactionData> TransactionDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionData>("SaGECorrespondenceModel.FK_TransData_Transaction", "TransactionData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionData>("SaGECorrespondenceModel.FK_TransData_Transaction", "TransactionData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionContactPoint_Transaction", "TransactionContactPoint")]
        public EntityCollection<TransactionContactPoint> TransactionContactPoints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionContactPoint>("SaGECorrespondenceModel.FK_TransactionContactPoint_Transaction", "TransactionContactPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionContactPoint>("SaGECorrespondenceModel.FK_TransactionContactPoint_Transaction", "TransactionContactPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionEntity_Transaction", "TransactionEntity")]
        public EntityCollection<TransactionEntity> TransactionEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionEntity>("SaGECorrespondenceModel.FK_TransactionEntity_Transaction", "TransactionEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionEntity>("SaGECorrespondenceModel.FK_TransactionEntity_Transaction", "TransactionEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelTransaction_Transaction", "ChannelBatchTransaction")]
        public EntityCollection<ChannelBatchTransaction> ChannelBatchTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelBatchTransaction>("SaGECorrespondenceModel.FK_ChannelTransaction_Transaction", "ChannelBatchTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelBatchTransaction>("SaGECorrespondenceModel.FK_ChannelTransaction_Transaction", "ChannelBatchTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_MergeBatchTransaction_Transaction", "MergeBatchTransaction")]
        public EntityCollection<MergeBatchTransaction> MergeBatchTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MergeBatchTransaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_Transaction", "MergeBatchTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MergeBatchTransaction>("SaGECorrespondenceModel.FK_MergeBatchTransaction_Transaction", "MergeBatchTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="TransactionChannel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionChannel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionChannel object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static TransactionChannel CreateTransactionChannel(global::System.Int32 keyId)
        {
            TransactionChannel transactionChannel = new TransactionChannel();
            transactionChannel.KeyId = keyId;
            return transactionChannel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionId;
        partial void OnTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelId
        {
            get
            {
                return _ChannelId;
            }
            set
            {
                OnChannelIdChanging(value);
                ReportPropertyChanging("ChannelId");
                _ChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelId");
                OnChannelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelId;
        partial void OnChannelIdChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine3
        {
            get
            {
                return _AddressLine3;
            }
            set
            {
                OnAddressLine3Changing(value);
                ReportPropertyChanging("AddressLine3");
                _AddressLine3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine3");
                OnAddressLine3Changed();
            }
        }
        private global::System.String _AddressLine3;
        partial void OnAddressLine3Changing(global::System.String value);
        partial void OnAddressLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine4
        {
            get
            {
                return _AddressLine4;
            }
            set
            {
                OnAddressLine4Changing(value);
                ReportPropertyChanging("AddressLine4");
                _AddressLine4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine4");
                OnAddressLine4Changed();
            }
        }
        private global::System.String _AddressLine4;
        partial void OnAddressLine4Changing(global::System.String value);
        partial void OnAddressLine4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactString
        {
            get
            {
                return _ContactString;
            }
            set
            {
                OnContactStringChanging(value);
                ReportPropertyChanging("ContactString");
                _ContactString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactString");
                OnContactStringChanged();
            }
        }
        private global::System.String _ContactString;
        partial void OnContactStringChanging(global::System.String value);
        partial void OnContactStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumberBody
        {
            get
            {
                return _NumberBody;
            }
            set
            {
                OnNumberBodyChanging(value);
                ReportPropertyChanging("NumberBody");
                _NumberBody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NumberBody");
                OnNumberBodyChanged();
            }
        }
        private global::System.String _NumberBody;
        partial void OnNumberBodyChanging(global::System.String value);
        partial void OnNumberBodyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelData_Channel", "Channel")]
        public Channel Channel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelData_Channel", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelData_Channel", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> ChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelData_Channel", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("SaGECorrespondenceModel.FK_ChannelData_Channel", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_ChannelData_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelData_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelData_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelData_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("SaGECorrespondenceModel.FK_ChannelData_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="TransactionContactPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionContactPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionContactPoint object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        /// <param name="contactPointId">Initial value of the ContactPointId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        public static TransactionContactPoint CreateTransactionContactPoint(global::System.Int32 keyId, global::System.Int32 contactPointId, global::System.Int32 transactionId)
        {
            TransactionContactPoint transactionContactPoint = new TransactionContactPoint();
            transactionContactPoint.KeyId = keyId;
            transactionContactPoint.ContactPointId = contactPointId;
            transactionContactPoint.TransactionId = transactionId;
            return transactionContactPoint;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactPointId
        {
            get
            {
                return _ContactPointId;
            }
            set
            {
                OnContactPointIdChanging(value);
                ReportPropertyChanging("ContactPointId");
                _ContactPointId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactPointId");
                OnContactPointIdChanged();
            }
        }
        private global::System.Int32 _ContactPointId;
        partial void OnContactPointIdChanging(global::System.Int32 value);
        partial void OnContactPointIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactType
        {
            get
            {
                return _ContactType;
            }
            set
            {
                OnContactTypeChanging(value);
                ReportPropertyChanging("ContactType");
                _ContactType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactType");
                OnContactTypeChanged();
            }
        }
        private global::System.String _ContactType;
        partial void OnContactTypeChanging(global::System.String value);
        partial void OnContactTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine3
        {
            get
            {
                return _AddressLine3;
            }
            set
            {
                OnAddressLine3Changing(value);
                ReportPropertyChanging("AddressLine3");
                _AddressLine3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine3");
                OnAddressLine3Changed();
            }
        }
        private global::System.String _AddressLine3;
        partial void OnAddressLine3Changing(global::System.String value);
        partial void OnAddressLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine4
        {
            get
            {
                return _AddressLine4;
            }
            set
            {
                OnAddressLine4Changing(value);
                ReportPropertyChanging("AddressLine4");
                _AddressLine4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine4");
                OnAddressLine4Changed();
            }
        }
        private global::System.String _AddressLine4;
        partial void OnAddressLine4Changing(global::System.String value);
        partial void OnAddressLine4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactString
        {
            get
            {
                return _ContactString;
            }
            set
            {
                OnContactStringChanging(value);
                ReportPropertyChanging("ContactString");
                _ContactString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactString");
                OnContactStringChanged();
            }
        }
        private global::System.String _ContactString;
        partial void OnContactStringChanging(global::System.String value);
        partial void OnContactStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumberBody
        {
            get
            {
                return _NumberBody;
            }
            set
            {
                OnNumberBodyChanging(value);
                ReportPropertyChanging("NumberBody");
                _NumberBody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NumberBody");
                OnNumberBodyChanged();
            }
        }
        private global::System.String _NumberBody;
        partial void OnNumberBodyChanging(global::System.String value);
        partial void OnNumberBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionContactPoint_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionContactPoint_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionContactPoint_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionContactPoint_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionContactPoint_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="TransactionData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionData object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static TransactionData CreateTransactionData(global::System.Int32 keyId)
        {
            TransactionData transactionData = new TransactionData();
            transactionData.KeyId = keyId;
            return transactionData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionId;
        partial void OnTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataTypeId
        {
            get
            {
                return _DataTypeId;
            }
            set
            {
                OnDataTypeIdChanging(value);
                ReportPropertyChanging("DataTypeId");
                _DataTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTypeId");
                OnDataTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataTypeId;
        partial void OnDataTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransData_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransData_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransData_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransData_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransData_Transaction", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionData_Transaction", "TransDataType")]
        public TransDataType TransDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransDataType>("SaGECorrespondenceModel.FK_TransactionData_Transaction", "TransDataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransDataType>("SaGECorrespondenceModel.FK_TransactionData_Transaction", "TransDataType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransDataType> TransDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransDataType>("SaGECorrespondenceModel.FK_TransactionData_Transaction", "TransDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransDataType>("SaGECorrespondenceModel.FK_TransactionData_Transaction", "TransDataType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="TransactionDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionDefinition object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static TransactionDefinition CreateTransactionDefinition(global::System.String keyId)
        {
            TransactionDefinition transactionDefinition = new TransactionDefinition();
            transactionDefinition.KeyId = keyId;
            return transactionDefinition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.String _KeyId;
        partial void OnKeyIdChanging(global::System.String value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountId;
        partial void OnAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionDefinition_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_TransactionDefinition_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_TransactionDefinition_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("SaGECorrespondenceModel.FK_TransactionDefinition_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("SaGECorrespondenceModel.FK_TransactionDefinition_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_Transaction_Transaction", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("SaGECorrespondenceModel.FK_Transaction_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("SaGECorrespondenceModel.FK_Transaction_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="TransactionEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionEntity object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static TransactionEntity CreateTransactionEntity(global::System.Int32 keyId)
        {
            TransactionEntity transactionEntity = new TransactionEntity();
            transactionEntity.KeyId = keyId;
            return transactionEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionId;
        partial void OnTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartyType
        {
            get
            {
                return _PartyType;
            }
            set
            {
                OnPartyTypeChanging(value);
                ReportPropertyChanging("PartyType");
                _PartyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartyType");
                OnPartyTypeChanged();
            }
        }
        private global::System.String _PartyType;
        partial void OnPartyTypeChanging(global::System.String value);
        partial void OnPartyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatPE
        {
            get
            {
                return _StatPE;
            }
            set
            {
                OnStatPEChanging(value);
                ReportPropertyChanging("StatPE");
                _StatPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatPE");
                OnStatPEChanged();
            }
        }
        private global::System.String _StatPE;
        partial void OnStatPEChanging(global::System.String value);
        partial void OnStatPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Initials
        {
            get
            {
                return _Initials;
            }
            set
            {
                OnInitialsChanging(value);
                ReportPropertyChanging("Initials");
                _Initials = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Initials");
                OnInitialsChanged();
            }
        }
        private global::System.String _Initials;
        partial void OnInitialsChanging(global::System.String value);
        partial void OnInitialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionEntity_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionEntity_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionEntity_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionEntity_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("SaGECorrespondenceModel.FK_TransactionEntity_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="TransDataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransDataType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransDataType object.
        /// </summary>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static TransDataType CreateTransDataType(global::System.Int32 keyId)
        {
            TransDataType transDataType = new TransDataType();
            transDataType.KeyId = keyId;
            return transDataType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                if (_KeyId != value)
                {
                    OnKeyIdChanging(value);
                    ReportPropertyChanging("KeyId");
                    _KeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyId");
                    OnKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SaGECorrespondenceModel", "FK_TransactionData_Transaction", "TransactionData")]
        public EntityCollection<TransactionData> TransactionDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionData>("SaGECorrespondenceModel.FK_TransactionData_Transaction", "TransactionData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionData>("SaGECorrespondenceModel.FK_TransactionData_Transaction", "TransactionData", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="SaGECorrespondenceModel", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

    
}
